plugins {
  id 'java'
  id 'org.springframework.boot' version '3.1.1'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.qubits'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '20'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

ext {
  set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
  implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
  implementation 'org.springframework.boot:spring-boot-starter-data-rest'
  implementation 'org.springframework.boot:spring-boot-starter-hateoas'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
  implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.apache.kafka:kafka-streams'
  implementation 'org.springframework.data:spring-data-rest-hal-explorer'
  implementation 'org.springframework.kafka:spring-kafka'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.springframework.kafka:spring-kafka-test'
  testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:kafka'
  testImplementation 'org.testcontainers:mongodb'
  testImplementation 'org.testcontainers:neo4j'
}

tasks.named('test') {
  outputs.dir snippetsDir
  useJUnitPlatform()
}

tasks.named('asciidoctor') {
  inputs.dir snippetsDir
  dependsOn test
}
